{"version":3,"file":"bootstrap-datepicker-lunar-plugin.umd.js","sources":["../src/util/get_lunar_date.js","../src/util/get_date.js","../src/index.js","../src/show.js"],"sourcesContent":["import LunarCalendar from 'lunar-calendar';\nimport getDate from './get_date';\n\n/**\n * Get lunar year, month, day, week according to input time(timestamp).\n *\n * @param time\n */\nexport default time => {\n  const date = getDate(time);\n\n  const lunarInfo = LunarCalendar.solarToLunar(date.year, date.month, date.day);\n\n  return {\n    year: lunarInfo.lunarYear,\n    month: lunarInfo.lunarMonth,\n    monthName: lunarInfo.lunarMonthName,\n    day: lunarInfo.lunarDay,\n    dayName: lunarInfo.lunarDayName,\n  };\n};\n","/**\n * Get year, month, day, week according to input time(timestamp).\n *\n * @param time\n * @returns {{year: number, month: number, week: number, day: number}}\n */\nexport default time => {\n  const date = new Date();\n  date.setTime(time);\n\n  return {\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    week: date.getDay(),\n    day: date.getDate(),\n  };\n};\n","import $ from 'jquery';\nimport 'bootstrap-datepicker';\nimport './index.less';\nimport show from './show';\n\n// datepicker prototype\nconst proto = $.fn.datepicker.prototype.constructor.Constructor.prototype;\n\n// rewrite datepicker.prototype.show\nproto.oldShow = proto.show;\nproto.show = function(...args) {\n  const self = this;\n  self.oldShow(args);\n\n  show(self);\n};\n","import $ from 'jquery';\nimport makeHtml from './make_html';\nimport getLunarDate from './util/get_lunar_date';\n\nexport default self => {\n  /* eslint-disable array-callback-return */\n  $(self.picker)\n    .find('.day')\n    .map(function() {\n      const $this = $(this);\n      const originText = $this.html();\n\n      // Have rendered before.\n      if (originText.indexOf('<br>') > -1) return;\n\n      // time(timestamp)\n      const date = parseInt($this.attr('data-date'), 10);\n\n      const lunarInfo = getLunarDate(date);\n\n      $this\n        .addClass('lunar-day')\n        .html(makeHtml(originText, lunarInfo.day === 1 ? lunarInfo.monthName : lunarInfo.dayName));\n    });\n};\n"],"names":["time","const","date","Date","setTime","year","getFullYear","month","getMonth","week","getDay","day","getDate","lunarInfo","LunarCalendar","solarToLunar","lunarYear","lunarMonth","monthName","lunarMonthName","lunarDay","dayName","lunarDayName","proto","fn","datepicker","prototype","constructor","Constructor","oldShow","show","this","args","self","$","picker","find","map","$this","originText","html","indexOf","getLunarDate","parseInt","attr","addClass"],"mappings":"iTAQeA,GACbC,IAAMC,WCHOF,GACbC,IAAMC,EAAO,IAAIC,KAGjB,OAFAD,EAAKE,QAAQJ,IAGXK,KAAMH,EAAKI,cACXC,MAAOL,EAAKM,WAAa,EACzBC,KAAMP,EAAKQ,SACXC,IAAKT,EAAKU,WDLCA,CAAQZ,GAEfa,EAAYC,EAAcC,aAAab,EAAKG,KAAMH,EAAKK,MAAOL,EAAKS,KAEzE,OACEN,KAAMQ,EAAUG,UAChBT,MAAOM,EAAUI,WACjBC,UAAWL,EAAUM,eACrBR,IAAKE,EAAUO,SACfC,QAASR,EAAUS,2DEZvBrB,IAAMsB,iDAAUC,GAAGC,WAAWC,UAAUC,YAAYC,YAAYF,UAGhEH,EAAMM,QAAUN,EAAMO,KACtBP,EAAMO,KAAO,kEACEC,KACRF,QAAQG,YCRAC,GAEbC,EAAED,EAAKE,QACJC,KAAK,QACLC,IAAI,WACHpC,IAAMqC,EAAQJ,EAAEH,MACVQ,EAAaD,EAAME,OAGzB,KAAID,EAAWE,QAAQ,SAAW,GAAlC,CAGAxC,IAEMY,EAAY6B,EAFLC,SAASL,EAAMM,KAAK,aAAc,KAI/CN,EACGO,SAAS,aACTL,KAAcD,mCAA8B,IAAlB1B,EAAUF,IAAYE,EAAUK,UAAYL,EAAUQ,uBDRvFS,CAHaC"}